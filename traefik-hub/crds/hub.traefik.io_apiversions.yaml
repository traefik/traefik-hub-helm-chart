---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: apiversions.hub.traefik.io
spec:
  group: hub.traefik.io
  names:
    kind: APIVersion
    listKind: APIVersionList
    plural: apiversions
    singular: apiversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.apiName
      name: APIName
      type: string
    - jsonPath: .spec.title
      name: Title
      type: string
    - jsonPath: .spec.release
      name: Release
      type: string
    - jsonPath: .spec.service.name
      name: ServiceName
      type: string
    - jsonPath: .spec.service.port.number
      name: ServicePort
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: APIVersion defines an APIVersion.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: APIVersionSpec configures an APIVersion.
            properties:
              apiName:
                type: string
              cors:
                description: CORS configures the CORS for the API.
                properties:
                  allowCredentials:
                    description: AllowCredentials defines whether the request can
                      include user credentials.
                    type: boolean
                  allowHeaders:
                    description: AllowHeaders defines the Access-Control-Request-Headers
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  allowMethods:
                    description: AllowMethods defines the Access-Control-Request-Method
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  allowOriginList:
                    description: AllowOriginList is a list of allowable origins. Can
                      also be a wildcard origin "*".
                    items:
                      type: string
                    type: array
                  allowOriginListRegex:
                    description: AllowOriginListRegex is a list of allowable origins
                      written following the Regular Expression syntax (https://golang.org/pkg/regexp/).
                    items:
                      type: string
                    type: array
                  exposeHeaders:
                    description: ExposeHeaders defines the Access-Control-Expose-Headers
                      values sent in preflight response.
                    items:
                      type: string
                    type: array
                  maxAge:
                    description: MaxAge defines the time that a preflight request
                      may be cached.
                    format: int64
                    type: integer
                type: object
              headers:
                description: Headers configures the requests and responses headers
                  manipulations.
                properties:
                  request:
                    description: HeadersConfig configures headers manipulations.
                    properties:
                      delete:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  response:
                    description: HeadersConfig configures headers manipulations.
                    properties:
                      delete:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              release:
                type: string
              routes:
                items:
                  description: Route determines how to match the version.
                  properties:
                    headers:
                      additionalProperties:
                        type: string
                      type: object
                    pathPrefix:
                      type: string
                    queryParams:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
              service:
                description: APIService configures the service to exposed on the edge.
                properties:
                  name:
                    type: string
                  openApiSpec:
                    description: OpenAPISpec defines the OpenAPI spec of an API.
                    properties:
                      path:
                        type: string
                      port:
                        description: APIServiceBackendPort is the service port being
                          referenced.
                        properties:
                          name:
                            description: name is the name of the port on the Service.
                              This must be an IANA_SVC_NAME (following RFC6335). This
                              is a mutually exclusive setting with "Number".
                            type: string
                          number:
                            description: number is the numerical port number (e.g.
                              80) on the Service. This is a mutually exclusive setting
                              with "Name".
                            format: int32
                            type: integer
                        type: object
                      protocol:
                        type: string
                      url:
                        type: string
                    type: object
                  port:
                    description: port of the referenced service. A port name or port
                      number is required for an APIServiceBackendPort.
                    properties:
                      name:
                        description: name is the name of the port on the Service.
                          This must be an IANA_SVC_NAME (following RFC6335). This
                          is a mutually exclusive setting with "Number".
                        type: string
                      number:
                        description: number is the numerical port number (e.g. 80)
                          on the Service. This is a mutually exclusive setting with
                          "Name".
                        format: int32
                        type: integer
                    type: object
                required:
                - name
                - port
                type: object
              stripPathPrefix:
                type: boolean
              title:
                type: string
            required:
            - apiName
            - service
            type: object
          status:
            description: The current status of this APIVersion.
            properties:
              hash:
                description: Hash is a hash representing the APIVersion.
                type: string
              syncedAt:
                format: date-time
                type: string
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
